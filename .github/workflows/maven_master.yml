# 
# This workflow will generate Sphinx documentation for a Python project and transfer it to Sonarccloud.
#
# It is only triggered on master branch.
#
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
#

name: Python CI for Development branch

on:
  push:
    branches:
      - master

jobs:

  sphinx:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        sudo apt install pandoc
        python -m pip install --upgrade pip
        pip install pytest coverage pytest-cov tox sphinx sphinx-autoapi
    - name: Build sphinx documentation
      run: |
        tox -e docs
        
        # Add a .nojekyll file so the directories prefixed with an underscore from sphinx e.g. _static are transferred correctly.
        echo "" > docs/_build/html/.nojekyll
        
    - name: Deploy to GitHubPages
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: docs/_build/html
        CLEAN: true
        
    - name: Upload Sphinx as artifact
      uses: actions/upload-artifact@v2
      with:
        name: anchor-python-visualization-docs
        path: docs/_build/html
        
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest coverage pytest-cov tox sphinx sphinx-autoapi
    - name: Test with pytest and make coverage
      run: |
        tox
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
      